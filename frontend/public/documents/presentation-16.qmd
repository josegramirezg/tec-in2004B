---
title: "Análisis de Ventas"
format:
  html:
    theme: cosmo
    toc: true
    code-fold: show
    embed-resources: true
    fig-width: 8
    fig-height: 5
    css: |
      .cell-output {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 5px;
        margin: 10px 0;
      }
      .cell-output pre {
        margin: 0;
        padding: 0;
        background: none;
      }
      .cell-output img {
        max-width: 100%;
        height: auto;
      }
      body {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }
---

# Análisis de Ventas

## Configuración

```{python}
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Configurar matplotlib
plt.rcParams['figure.figsize'] = (8, 5)
plt.rcParams['font.size'] = 10

print("✅ Configuración completada")
```

## Datos

```{python}
# Generar datos de ejemplo
np.random.seed(42)
data = pd.DataFrame({
    'ventas': np.random.normal(1000, 200, 500),
    'fecha': pd.date_range('2024-01-01', periods=500)
})

print(f"Dataset: {len(data)} registros")
print(f"Período: {data['fecha'].min().date()} a {data['fecha'].max().date()}")
```

## Estadísticas

```{python}
# Estadísticas básicas
stats = data['ventas'].describe()
print("Estadísticas de Ventas:")
for stat, value in stats.items():
    print(f"  {stat}: ${value:.2f}")
```

## Gráfico 1: Distribución

```{python}
# Histograma
plt.figure(figsize=(8, 5))
plt.hist(data['ventas'], bins=20, alpha=0.7, color='skyblue')
plt.title('Distribución de Ventas')
plt.xlabel('Ventas ($)')
plt.ylabel('Frecuencia')
plt.grid(True, alpha=0.3)
plt.tight_layout()
plt.show()
```

## Gráfico 2: Tendencia

```{python}
# Serie temporal (últimos 50 días)
plt.figure(figsize=(8, 5))
plt.plot(data['fecha'].tail(50), data['ventas'].tail(50), 'b-', linewidth=2)
plt.title('Tendencia de Ventas (Últimos 50 días)')
plt.xlabel('Fecha')
plt.ylabel('Ventas ($)')
plt.xticks(rotation=45)
plt.grid(True, alpha=0.3)
plt.tight_layout()
plt.show()
```

## Análisis

```{python}
# Cálculos adicionales
promedio = data['ventas'].mean()
max_venta = data['ventas'].max()
min_venta = data['ventas'].min()

print(f"Promedio: ${promedio:.2f}")
print(f"Máximo: ${max_venta:.2f}")
print(f"Mínimo: ${min_venta:.2f}")
print(f"Rango: ${max_venta - min_venta:.2f}")
```

## Proyección

```{python}
# Proyección simple
factor = 1.1
proyeccion = promedio * factor

print(f"Proyección (+{((factor-1)*100):.0f}%): ${proyeccion:.2f}")
print(f"Diferencia: ${proyeccion - promedio:.2f}")
```

## Resumen

Este análisis muestra:

- **Promedio de ventas**: ${promedio:.2f}
- **Variabilidad**: ${data['ventas'].std():.2f}
- **Proyección**: ${proyeccion:.2f}

---

*Documento generado con Quarto y Python*